name: yc_compute
plugin_type: inventory
short_description: Yandex.Cloud Compute inventory source
requirements:
  - yandexcloud==0.10.1
extends_documentation_fragment:
  - constructed
  - inventory_cache
description:
  - Pull inventory from Yandex Cloud Compute.
  - Uses a YAML configuration file that ends with yc_compute.(yml|yaml) or yc.(yml|yaml).
version_added: "2.10"
options:
  auth_kind:
    description: The type of credential used.
    required: True
    choices: ['oauth', 'serviceaccountfile']
    env:
      - name: YC_ANSIBLE_AUTH_KIND
  oauth_token:
    description: OAUTH token string. See U(https://cloud.yandex.com/docs/iam/concepts/authorization/oauth-token).
    type: string
    env:
      - name: YC_ANSIBLE_OAUTH_TOKEN
  service_account_file:
    description:
      - The path of a Service Account JSON file. Must be set if auth_kind is "serviceaccountfile".
      - "Service Account JSON file can be created by C(yc) tool:"
      - C(yc iam key create --service-account-name my_service_account --output my_service_account.json)
    type: path
    env:
        - name: YC_ANSIBLE_SERVICE_ACCOUNT_FILE
  service_account_contents:
    description: Similar to service_account_file. Should contain raw contents of the Service Account JSON file.
    type: string
    env:
      - name: YC_ANSIBLE_SERVICE_ACCOUNT_CONTENTS
  hostnames:
    description:
      - The list of methods for determining the hostname.
      - Several methods can be tried one by one. Until successful hostname detection.
      - Currently supported methods are 'public_ip', 'private_ip' and 'fqdn'.
      - Any other value is parsed as a jinja2 expression.
    default: ['public_ip', 'private_ip', 'fqdn']
    type: list
  folders:
    description: List of Yandex.Cloud folder ID's to list instances from.
    type: list
    required: True
  remote_filter:
    description:
      - Sets C(filter) parameter for C(list) API call.
      - Currently you can use filtering only on the Instance.name field.
      - See U(https://cloud.yandex.com/docs/compute/api-ref/Instance/list).
      - Use C(filters) option for more flexible client-side filtering.
    type: string
  filters:
    description:
      - List of jinja2 expressions to perform client-side hosts filtering.
      - Possible fields are described here U(https://cloud.yandex.com/docs/compute/api-ref/Instance/list).
      - When overriding this option don't forget to explicitly include default value to your rules (if you need it).
    type: list
    default: status == 'RUNNING'
  api_retry_count:
    description: Retries count for API calls.
    type: int
    default: 5

plugin: yc_compute
folders:  # List inventory hosts from these folders.
  - <your_folder_id>
filters:
  - status == 'RUNNING'
  - labels['role'] == 'db'
auth_kind: serviceaccountfile
service_account_file: /path/to/your/service/account/file.json
hostnames:
  - fqdn  # Use FQDN for inventory hostnames.
# You can also format hostnames with jinja2 expressions like this
# - "{{id}}_{{name}}"

compose:
  # Set ansible_host to the Public IP address to connect to the host.
  # For Private IP use "network_interfaces[0].primary_v4_address.address".
  ansible_host: network_interfaces[0].primary_v4_address.one_to_one_nat.address

keyed_groups:
  # Place hosts in groups named by folder_id.
  - key: folder_id
    prefix: ''
    separator: ''
  # Place hosts in groups named by value of labels['group'].
  - key: labels['group']

groups:
  # Place hosts in 'ssd' group if they have appropriate disk_type label.
  ssd: labels['disk_type'] == 'ssd'
